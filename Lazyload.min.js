class Lazy{constructor(t){let e=document.getElementById(t);function n(t){return new Promise((e,n)=>{let i=new Image;i.src=t,r(i.style,{width:"100%",display:"block"}),i.onload=function(t){e(i)},i.onerror=function(t){n(t)}})}function r(t,e){Object.keys(e).forEach(n=>{t.setProperty(n,e[n],"important")})}async function i(t){for(let r=0;r<t.length;r++)await n(t[r]).then(t=>{let n=e.querySelector(`div[data-id="${r}"]`);e.replaceChild(t,n)}).catch(t=>{let n=e.querySelector(`div[data-id="${r}"]`);n.innerText="Image Error"})}function a(t){this.length=t.length,this.state="render";for(let n=0;n<t.length;n++){let a=document.createElement("div");r(a.style,{width:"100%",height:"100px",display:"flex","align-items":"center","justify-content":"center","font-size":"15pt"}),a.setAttribute("data-id",n),a.innerText="Loading...",e.appendChild(a)}return document.addEventListener("readystatechange",e=>{"complete"===e.target.readyState&&i(t)}),this}function l(t){let e=new IntersectionObserver(n=>{n.forEach(n=>{n.isIntersecting&&(n.target.src=t,e.unobserve(n.target))})});return e}function s(t){let n=e.querySelectorAll("img");return this.length=n.length,this.state="lazy",document.addEventListener("readystatechange",e=>{"complete"===e.target.readyState&&n.forEach(e=>{let n=e.dataset[t];r(e.style,{width:"100%",display:"block"}),n&&l(n).observe(e),n&&e.removeAttribute(`data-${t}`)})}),this}this.render=a.bind(this),this.lazy=s.bind(this)}}
